/******************************************************************************
 * MicroOLED_DrawBitmap.ino
 * Прорисоква картинок на библиотеке MicroOLED Breakout
 * Автор Джим Линдблом @ SparkFun Electronics
 * Дата создания оригинала: 27 октября 2014 г.
 *
 * Этот скетч использует библиотеку MicroOLED для рисования картинок
 *
 * Особенности среды разработки:
 * Arduino 1.0.5
 * Arduino Pro 3.3V
 * Micro OLED Breakout v1.0
 *
 * Распространяется как есть; гарантия не предоставляется.
 ******************************************************************************/
 
    #include <Wire.h>                              // Подключаем библиотеку для работы с шиной I2C (если дисплей подключется по этой шине)
//  #include <SPI.h>                               // Подключаем библиотеку для работы с шиной SPI (если дисплей подключется по этой шине)
    #include <SFE_MicroOLED.h>                     // Подключаем библиотеку SFE_MicroOLED для работы с OLED дисплеем
                                                   //
//  #define PIN_RESET 9                            // Определяем номер вывода к которому подключён вывод RST дисплея при подключении по шине SPI
//  #define PIN_DC    8                            // Определяем номер вывода к которому подключён вывод DC  дисплея при подключении по шине SPI
//  #define PIN_CS    10                           // Определяем номер вывода к которому подключён вывод CS  дисплея при подключении по шине SPI
                                                   //
    #define PIN_RESET 255                          // Определяем номер вывода к которому подключён вывод RST дисплея при подключении по шине I2C (если у дисплея нет этого вывода, то присвиваем значение 255)
    #define DC_JUMPER 0                            // Определяем адрес дисплея на шине I2C: 0-0x3C / 1-0x3D
                                                   //
//  MicroOLED oled(PIN_RESET, PIN_DC, PIN_CS);     // Объявляем объект oled для работы с дисплеем по шине SPI, указывая ранее определённые выводы
    MicroOLED oled(PIN_RESET, DC_JUMPER);          // Объявляем объект oled для работы с дисплеем по шине I2C, указывая ранее определённые выводы и адрес дисплея
                                                   // Для создания массивов из картинок BMP, предлагаем воспользоваться программой LCDAssistant из папки Tools данной библиотеки
                                                   // Откройте файл, выберите вертикальную ориентацию, ширина и высота установятся автоматически, не меняя остальные параметры сохрание массив в любой файл.
uint8_t bender [] = {                              // Определяем массив с картинкой bender.
                                                   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xBF, 0xDF, 0x5F, 0x5F, 0x5F, 0x5F,
                                                   0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F,
                                                   0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F,
                                                   0x5F, 0xDF, 0xBF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                                                   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0xF9, 0xFE, 0x07, 0x01, 0x00, 0x00, 0xF8, 0xFE, 0xFF,
                                                   0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0xFF, 0xFF, 0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00,
                                                   0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8,
                                                   0x00, 0x00, 0x01, 0x07, 0xFE, 0xF9, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                                                   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF9, 0xE7, 0xDC, 0xB0, 0xA0, 0x40, 0x41, 0x47, 0x4F,
                                                   0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x4F, 0x47, 0x43, 0x40, 0x40, 0x40, 0x40,
                                                   0x43, 0x47, 0x4F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x5F, 0x4F, 0x47, 0x43, 0x40,
                                                   0x40, 0xA0, 0xB0, 0xDE, 0xE7, 0xF9, 0xFE, 0x1F, 0x0F, 0x07, 0x73, 0x79, 0xFF, 0xFF, 0xFF, 0xFF,
                                                   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F,
                                                   0xBF, 0x5F, 0xEF, 0x0F, 0xEF, 0xEF, 0xDF, 0xDF, 0x1F, 0xDF, 0xDF, 0xDF, 0xDF, 0x1F, 0xDF, 0xDF,
                                                   0xDF, 0xDF, 0xDF, 0x1F, 0xDF, 0xDF, 0xDF, 0xEF, 0x0F, 0xEF, 0xDF, 0xBF, 0x7F, 0xFF, 0xFF, 0xFF,
                                                   0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xBE, 0x9C, 0xC0, 0xE0, 0xF0, 0xF9, 0xFF, 0xFF,
                                                   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0,
                                                   0xB7, 0x6F, 0xEE, 0x00, 0xDE, 0xDE, 0xDE, 0xDD, 0x00, 0xDD, 0xDD, 0xDD, 0xDD, 0x00, 0xDD, 0xDD,
                                                   0xDD, 0xC5, 0xC1, 0x00, 0xC9, 0xC5, 0xC1, 0x01, 0xC8, 0xC4, 0x42, 0x80, 0xC0, 0xE8, 0xE4, 0xE2,
                                                   0xE0, 0xE0, 0xEF, 0xEF, 0xE6, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                                                   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                                                   0xFF, 0xFF, 0xFE, 0xFE, 0xFD, 0xFD, 0xFD, 0xFB, 0xF8, 0xFB, 0xFB, 0xFB, 0xFB, 0xF8, 0xFB, 0xFB,
                                                   0xFB, 0xFB, 0xFB, 0xF8, 0xFB, 0xFD, 0xFD, 0xFC, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                                                   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
void setup(){                                      //
     oled.begin();                                 // Инициируем работу с OLED дисплеем
     oled.clear(ALL);                              // Чистим графическую память дисплея (избавляемся от артефактов которые могли появиться при подаче питания)
     oled.display();                               // Выводим данные из буфера библиотеки на дисплей
     delay(1000);                                  // Устанавливаем зажержку на 1 секунду
     oled.clear(PAGE);                             // Чистим графический буфер библиотеки
     oled.drawBitmap(bender);                      // Загружаем картинку из массива bender в буфер библиотеки
     oled.display();                               // Выводим данные из буфера библиотеки на дисплей
}                                                  //
                                                   //
void loop(){}                                      //